"use strict;";
// ПОКОЙ, ВОЗБУЖДЕНИЕ, РЕФРАКТЕРНОСТЬ
// Элемент в покое, если y[i][j] == 0
// Рефрактерность - элемент не может возбуждаться, через
// const N = 50;
// const M = 50;
// const s = 13; // через s состояний элемент возвращается в состояние покоя
// const r = 6; // Рефрактерность после r состояний(до r - элемент возбужден)
// const h = 5; // пороговое значение концентрации активатора, после него элемент возбуждается

// через s шагов после возбуждения элемент возвращается в состояние покоя.
// из s в состояние покоя => концентрация активатора u[i][j] = 0
// s>r !!!!!!!!!!!!

// есть возбужденный сосед => концентрация элемента u[i][j]++
// Если l ближайших соседей возбуждены, то на соот- ветствующем шаге к предыдущему значению концентрации активатора
// прибавляется число возбужденных соседей

new CellularAutomaton();
